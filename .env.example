PUBLIC_EGO_BACKEND_URL=http://localhost:8080 #local
GEMINI_BACKEND_API_KEYS=your_gemini_api_keys
SECRET_KEY=your_generated_jwt_token
GOOGLE_CLIENT_ID=your_google_auth_id.apps.googleusercontent.com
POSTGRES_USER=your_db_user
POSTGRES_PASSWORD=your_db_pass
POSTGRES_DB=your_db_name
API_ENCRYPTION_KEY=your_32_byte_hex_encoded_key
TELEGRAM_BOT_TOKEN=your_telegram_bot_token
TELEGRAM_CHAT_ID=your_telegram_chat_id
# -----------------------------------------------------------------------------
# GO-API SETTINGS
# -----------------------------------------------------------------------------
# Server address and port to listen on.
SERVER_ADDR=":8080"
# Main database connection string (DSN) for PostgreSQL.
DB_PATH="postgres://user:password@localhost:5432/ego?sslmode=disable"
# Path to the directory containing database migration files.
MIGRATIONS_PATH="migrations"
# A strong, secret key for signing JWT tokens. Use a long, random string.
JWT_SECRET="your_very_strong_and_long_jwt_secret_key"
# A 32-byte (64 hex characters) key for encrypting sensitive data in the database (e.g., user API keys).
# Generate one with: openssl rand -hex 32
API_ENCRYPTION_KEY="your_64_character_hex_encryption_key_here"
# Your Google OAuth 2.0 Client ID for Google Login. Optional.
GOOGLE_CLIENT_ID="your-google-client-id.apps.googleusercontent.com"
# Full URL of the Python backend service.
PYTHON_BACKEND_URL="http://localhost:5001"
# S3-compatible storage endpoint URL. Optional.
S3_ENDPOINT="https://s3.your-provider.com"
# S3 region.
S3_REGION="us-east-1"
# S3 access key ID.
S3_ACCESS_KEY="your_s3_access_key"
# S3 secret access key.
S3_SECRET_KEY="your_s3_secret_key"
# The name of the S3 bucket to use for file storage.
S3_BUCKET_NAME="your-ego-bucket-name"
# Telegram Bot Admin configuration. Optional.
TELEGRAM_BOT_TOKEN="your_telegram_bot_token"
TELEGRAM_CHAT_ID="your_telegram_chat_id_for_admin_messages"
# Maximum number of iterations for the agent's thinking cycle.
MAX_THINKING_ITERATIONS="10"
# Comma-separated list of allowed origins for CORS. No spaces.
CORS_ALLOWED_ORIGINS="http://localhost:5173,http://localhost:4173,https://your-frontend-domain.com"
# Max age for CORS preflight requests in seconds.
CORS_MAX_AGE="300"
# Timeout for the general HTTP client used to communicate with the Python backend.
HTTP_CLIENT_TIMEOUT="15m"
# How long to wait for the server to shut down gracefully before forcing it.
SHUTDOWN_TIMEOUT="10s"
# A final sleep period after shutdown to allow any lingering background tasks to finish.
SHUTDOWN_FINAL_SLEEP="5s"
# How often the job to clean up old files runs.
FILE_CLEANUP_INTERVAL="24h"
# Deletes file attachments older than this duration.
FILE_CLEANUP_AGE="24h"
# How often the job to clean up orphaned (unlinked) files runs.
ORPHAN_CLEANUP_INTERVAL="6h"
# Deletes orphaned files older than this duration.
ORPHAN_CLEANUP_AGE="1h"
# Interval for frequent pings right after startup to "warm up" the Python service.
KEEPALIVE_BOOTSTRAP_INTERVAL="30s"
# Interval for regular health checks after the initial warm-up.
KEEPALIVE_REGULAR_INTERVAL="4m"
# How long to wait for a response from the health check endpoint.
KEEPALIVE_HEALTHCHECK_TIMEOUT="30s"
# Number of warm-up attempts before switching to the regular interval.
KEEPALIVE_WARMUP_ATTEMPTS="10"
# -----------------------------------------------------------------------------
# PYTHON-API SETTINGS
# -----------------------------------------------------------------------------
# -----------------------------------------------------------------------------
# SERVER & CORS
# -----------------------------------------------------------------------------
# Comma-separated list of allowed origins for CORS. No spaces.
# Defaults to "*" if not set.
CORS_ALLOW_ORIGINS="http://localhost:5173,http://localhost:4173"
# -----------------------------------------------------------------------------
# DATABASE
# -----------------------------------------------------------------------------
# Main database connection string (DSN) for the memory database (e.g., PostgreSQL).
# EGO_MEMORY_DB_URL is an alias for DATABASE_URL.
DATABASE_URL="postgres://user:password@localhost:5432/ego_memory?sslmode=disable"
EGO_MEMORY_DB_URL=""
# -----------------------------------------------------------------------------
# S3-COMPATIBLE STORAGE
# -----------------------------------------------------------------------------
# S3-compatible storage endpoint URL. Optional.
S3_ENDPOINT="https://s3.your-provider.com"
# S3 region.
S3_REGION="us-east-1"
# S3 access key ID.
S3_ACCESS_KEY_ID="your_s3_access_key"
# S3 secret access key.
S3_SECRET_KEY="your_s3_secret_key"
# The name of the S3 bucket to use for file storage.
S3_BUCKET_NAME="your-ego-bucket-name"
# -----------------------------------------------------------------------------
# LOGGING
# -----------------------------------------------------------------------------
# Logging level for the application. Can be DEBUG, INFO, WARNING, ERROR, CRITICAL.
# Defaults to "INFO".
LOG_LEVEL="INFO"
# If set to "false", logs will not be output to the console.
# Defaults to "true".
LOG_TO_CONSOLE="true"
# If you use Logtail for log management, provide your source token here. Optional.
LOGTAIL_SOURCE_TOKEN=""
# -----------------------------------------------------------------------------
# GEMINI & LLM BACKEND
# -----------------------------------------------------------------------------
# Comma-separated list of your Gemini API keys.
GEMINI_BACKEND_API_KEYS="your_gemini_api_key_1,your_gemini_api_key_2"
# Cooldown period in seconds after a Gemini API key fails with a quota error.
# Defaults to 60.
GEMINI_KEY_COOLDOWN_SECONDS="60"
# Cooldown period in seconds after a Gemini API key fails with a transient error.
# Defaults to 5.
GEMINI_TRANSIENT_COOLDOWN_SECONDS="5"
# The embedding provider to use. "local" or a Gemini model.
# Defaults to "local".
EGO_EMBED_PROVIDER="local"
# The specific model to use for embeddings, e.g., "text-embedding-004".
GEMINI_EMBEDDING_MODEL="gemini-embedding-001"
# Default model for general tasks.
GEMINI_DEFAULT_MODEL="gemini-2.5-flash"
# Model for more complex, "deeper" reasoning tasks.
GEMINI_DEEPER_MODEL="gemini-2.5-flash"
# Model used for research-related tasks.
GEMINI_RESEARCH_MODEL="gemini-2.5-flash"
# Model used by the agent for its internal thinking process.
GEMINI_AGENT_MODEL="gemini-2.5-flash"
# -----------------------------------------------------------------------------
# AGENT SETTINGS
# -----------------------------------------------------------------------------
# Maximum number of retry attempts for the agent's actions.
# Defaults to 3.
MAX_ATTEMPTS="3"
# -----------------------------------------------------------------------------
# EGO FRONTEND SETTINGS
# -----------------------------------------------------------------------------
# Full URL of the Go backend service.
# Used by the frontend to make API calls to the main application server.
# For local development, this typically points to the port your Go backend is running on.
VITE_PUBLIC_EGO_BACKEND_URL=http://localhost:8080
# Full URL of the Python backend service.
# Used for specific Python-based functionalities that the frontend might call directly.
# For local development, this points to the port your Python backend is running on.
VITE_PUBLIC_EGO_PY_BACKEND_URL=http://localhost:5001
# Your Google OAuth 2.0 Client ID for enabling Google Login in the frontend.
# This is obtained from the Google Cloud Console when you set up OAuth 2.0.
PUBLIC_GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com